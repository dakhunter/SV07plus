[gcode_macro G29]
description: gcode to probe bed
gcode:
	G28
	SET_PIN PIN=caselight VALUE=1 # Turn ON Light
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=65
	G4 P1800000	
 	BED_MESH_CALIBRATE
 	G1 X151 Y115 Z5 F15000

[pause_resume]

[gcode_macro M0]
gcode: 
  PAUSE


# --------------------------- CUSTOM MACROS --------------------------
# --------------------------- Start Print ----------------------------
[gcode_macro START_PRINT]
description: gcode when print is started
# variable_bed_temp: 60
# variable_extruder_temp: 210
# variable_parameter_AREA_START : 0,0
# variable_parameter_AREA_END : 0,0

gcode:
	      #Get Bed and Extruder temperature from Slicer GCode
	{% set bed_temp = params.BED_TEMP|default(60)|float %}
	{% set extruder_temp = params.EXTRUDER_TEMP|default(220)|float %}
	#Preheat nozzle and bed
	M104 S{extruder_temp}                       
    # Start bed heating
    M140 S{bed_temp}
	# G1 E-0.3000 F1800
	# BED_MESH_PROFILE LOAD=default
	G28
	BED_MESH_CALIBRATE

	# Turn on Light
	SET_PIN PIN=caselight VALUE=1
	# SET_PIN PIN=accentlight VALUE=1							# Turn on AccentLight
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z1.0 F300
    # Wait for bed to reach temperature
    M190 S{bed_temp}
    # Set and wait for nozzle to reach temperature
    M109 S{extruder_temp}
	
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z2.0 F3000
    # Move to start position
    G1 X10 Y10 Z0.28 F5000.0
	# VORON_PURGE
	LINE_PURGE
	# # Draw the first line
    # G1 X10 Y200.0 Z0.15 F1500.0 E15
    # # Move to side a little
    # G1 X10.6 Y200.0 Z0.15 F5000.0
    # # Draw the second line
    # G1 X10.6 Y300 Z0.28 F1500.0 E30
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z2.0 F3000
    # Print message on LCD
    M117 Ready To Roll!
# --------------------------------
# --------------------------------------------------------------------

# ---------------------------- Cancel Print -----------------------------
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-2 F2400
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z25
    # Absolute positionning
    G90
    # Present print
    G1 X220 Y220
    # Disable steppers
    M84
    # Print message on LCD
    M117 That's All Folks

# ----------------------------- End Print ---------------------
[gcode_macro END_PRINT]
gcode:
	SET_PIN PIN=caselight VALUE=0 # Turn off Light
    G91 ;Relative positioning
	G1 E-2 F2700 ;Retract a bit
	G1 E-2 Z0.2 F2400 ;Retract and raise Z
	G1 X5 Y5 F3000 ;Wipe out
	G1 Z10 ;Raise Z more
	G90 ;Absolute positioning
	G1 X220 Y220 ;Present print
	M106 S0 ;Turn-off fan
	M104 S0 ;Turn-off hotend
	M140 S0 ;Turn-off bed
	M84 X Y E ;Disable all steppers but Z

 #------------------------- Calibrate Probe -----------------------
[gcode_macro CALIBRATE_PROBE]
description: Calibrate Probe offset
gcode:
  G28
  SET_PIN PIN=caselight VALUE=1 # Turn ON Light
  PROBE_CALIBRATE

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
	{% set bound = params.BOUND|default(20)|int %}
	# Size for small pattern box
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	# Large pattern
		# Max positions, inset by BOUND
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	# Small pattern at center
		# Find X/Y center point
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
		
		# Set small pattern box around center point
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Output parameters to g-code terminal
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		# Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
		G90
		G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
		G28 X Y
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	{% for i in range(iterations) %}
		# Large pattern
			# Diagonals
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			
			# Box
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
		
		# Small pattern
			# Small diagonals 
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			
			# Small box
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED

### Test PID TUNE Macro
[gcode_macro PID_TUNE]
description: PID Tuning printer
gcode:
	# Turn on Part Cooling Fan
	M106 S255
	# Set Heating Temp
	{% set pid_nozzle_temp = params.EXTRUDER_TEMP|default(210)|int %}
	{% set pid_bed_temp = params.BED_TEMP|default(60)|int %}

	# PID Tune Bed
	{ action_respond_info("PID Tune heater_bed at %dC" % (pid_bed_temp))}
	# Set bed temp to new value
	PID_CALIBRATE HEATER=heater_bed TARGET={pid_bed_temp}
	# Pause a moment before tuning Extruder
	G4 P60000	
	# PID Tune Extruder
	{ action_respond_info("PID Tune extruder at %d C" % (pid_nozzle_temp)) }
	PID_CALIBRATE HEATER=extruder TARGET={pid_nozzle_temp}

	save_config

# ---- Macro to Lube the threaded rods --------
[gcode_macro LUBE_RODS]
description: Lubing the rods
gcode:
	;Example code courtesy of DIY3DTech.com
	G21 ;metric values
	G90 ;absolute positioning
	M82 ;set extruder to absolute mode
	M107 ;set fan off
	G28 ; Home all axis
	G1 Z30.0 F9000 ;move platform to clear indicator
	G92 E0 ;zero the extruded length
	G92 E0 ;zero the extruded length again
	G1 F9000
	M107 ;set fan off

	;--------------Main Code-------------------------------------------------
	G0 F3500 X151.000 Y115.00 Z10.000 ;move nozzle away from home point 151,115
	G0 Z250.00 ;move z to 150mm (adjust as needed)
	G0 Z10.00 ;move z back down (adjust as needed)
	G0 Z250.00 ;move z to 150mm (adjust as needed)
	G0 Z10.00 ;move z back down (adjust as needed)
	G0 Z250.00 ;move z to 150mm (adjust as needed)
	G0 Z10.00 ;move z back down (adjust as needed)
	G0 Z250.00 ;move z to 150mm (adjust as needed)
	G0 Z10.00 ;move z back down (adjust as needed)
	;finnish and return to home postion (you can add more G0 loops if you need)
	G28 ; Home all

	;--------------Footer Code-----------------------------------------------------
	M107
	G0 F9000 X30 Y40 Z50
	;End GCode
	M104 S0 ;extruder heater off
	M140 S0 ;heated bed heater off (if you have it)
	G91 ;relative positioning
	M84 ;steppers off
	G90 ;absolute positioning


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-1 F1000
    RESTORE_GCODE_STATE NAME=M600_state
